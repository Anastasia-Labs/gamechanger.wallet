{
  "title": "Lock and Redeem Smart Contract",
  "description": "Coin locking transaction ( 5 eUTXOs) and later an unlocking one of previously locked coin, in 2 secuential transactions. Using deployed smart contract.",
  "type": "script",
  "run": {
    "dependencies": {
      "type": "script",
      "run": {
        "locks": {
          "type": "data",
          "value": [
            {
              "coin": "2600000",
              "datum": "1a0027ac40",
              "datumHash": "bdfeadeebc2251f45aadab51bd9ff21deb8692da6a75e5559bd5daba8c0aa253"
            },
            {
              "coin": "3200000",
              "datum": "1a0030d400",
              "datumHash": "dbfe5f20cc76dd229e84d38e609fc7b3f54213f7cd2f742827b6ca123379b326"
            },
            {
              "coin": "4600000",
              "datum": "1a004630c0",
              "datumHash": "ec56e1e4d98a381909dfb64f174cbab73adb1567cf3fa3237fb7a4242d4dff47"
            },
            {
              "coin": "6400000",
              "datum": "1a0061a800",
              "datumHash": "cbe177026ca1ec70ef3b20862994ec1cf88049096f6254b3031d524ef54d8f92"
            },
            {
              "coin": "8200000",
              "datum": "1a007d1f40",
              "datumHash": "96eedcb9ba3d6d7540b72ca9a6aec4c3c88c922723210252f353890664dff8b1"
            }
          ]
        },
        "stakeCredential": {
          "type": "data",
          "value": "ad03a4ae45b21f50fde67956365cff94db41bc08a2c2862403d8a234"
        },
        "smartContract": {
          "type": "plutusScript",
          "script": {
            "scriptHex": "4746010000222499",
            "lang": "plutus_v2"
          }
        },
        "smartContractAddress": {
          "type": "buildAddress",
          "name": "smartContractAddress",
          "addr": {
            "spendScriptHashHex": "{get('cache.dependencies.smartContract.scriptHashHex')}",
            "stakePubKeyHashHex": "{get('cache.dependencies.stakeCredential')}"
          }
        }
      }
    },
    "buildLock": {
      "type": "buildTx",
      "name": "LockingTX",
      "tx": {
        "outputs": [
          {
            "address": "{get('cache.dependencies.smartContractAddress')}",
            "datum": {
              "datumHashHex": "{get('cache.dependencies.locks.0.datumHash')}"
            },
            "assets": {
              "toBeLocked": {
                "policyId": "ada",
                "assetName": "ada",
                "quantity": "{get('cache.dependencies.locks.0.coin')}"
              }
            }
          },
          {
            "address": "{get('cache.dependencies.smartContractAddress')}",
            "datum": {
              "datumHashHex": "{get('cache.dependencies.locks.1.datumHash')}"
            },
            "assets": {
              "toBeLocked": {
                "policyId": "ada",
                "assetName": "ada",
                "quantity": "{get('cache.dependencies.locks.1.coin')}"
              }
            }
          },
          {
            "address": "{get('cache.dependencies.smartContractAddress')}",
            "datum": {
              "datumHashHex": "{get('cache.dependencies.locks.2.datumHash')}"
            },
            "assets": {
              "toBeLocked": {
                "policyId": "ada",
                "assetName": "ada",
                "quantity": "{get('cache.dependencies.locks.2.coin')}"
              }
            }
          },
          {
            "address": "{get('cache.dependencies.smartContractAddress')}",
            "datum": {
              "datumHashHex": "{get('cache.dependencies.locks.3.datumHash')}"
            },
            "assets": {
              "toBeLocked": {
                "policyId": "ada",
                "assetName": "ada",
                "quantity": "{get('cache.dependencies.locks.3.coin')}"
              }
            }
          },
          {
            "address": "{get('cache.dependencies.smartContractAddress')}",
            "datum": {
              "datumHashHex": "{get('cache.dependencies.locks.4.datumHash')}"
            },
            "assets": {
              "toBeLocked": {
                "policyId": "ada",
                "assetName": "ada",
                "quantity": "{get('cache.dependencies.locks.4.coin')}"
              }
            }
          }
        ],
        "options": {
          "changeOptimizer": "NO"
        }
      }
    },
    "signLock": {
      "type": "signTxs",
      "namePattern": "signed-lock",
      "txs": [
        "{get('cache.buildLock.txHex')}"
      ],
      "detailedPermissions": false
    },
    "submitLock": {
      "type": "submitTxs",
      "namePattern": "submitted-lock",
      "txs": "{get('cache.signLock')}"
    },
    "buildUnlock": {
      "type": "buildTx",
      "name": "UnlockingTX",
      "tx": {
        "inputs": [
          {
            "txHash": "{get('cache.buildLock.txHash')}",
            "index": 0
          },
          {
            "txHash": "{get('cache.buildLock.txHash')}",
            "index": 1
          },
          {
            "txHash": "{get('cache.buildLock.txHash')}",
            "index": 2
          },
          {
            "txHash": "{get('cache.buildLock.txHash')}",
            "index": 3
          },
          {
            "txHash": "{get('cache.buildLock.txHash')}",
            "index": 4
          }
        ],
        "referenceInputs": [
          {
            "txHash": "672e8af629fbd480be2baf14ff9046df4a9c689ad48bc84da88531da48721f03",
            "index": 0
          }
        ],
        "witnesses": {
          "plutus": {
            "scripts": [
              {
                "scriptHashHex": "{get('cache.dependencies.smartContract.scriptHashHex')}",
                "lang": "{get('cache.dependencies.smartContract.lang')}",
                "scriptSize": "{get('cache.dependencies.smartContract.scriptSize')}",
                "input": {
                  "txHash": "672e8af629fbd480be2baf14ff9046df4a9c689ad48bc84da88531da48721f03",
                  "index": 0
                }
              }
            ],
            "consumers": [
              {
                "scriptHashHex": "{get('cache.dependencies.smartContract.scriptHashHex')}",
                "datum": {
                  "dataHex": "{get('cache.dependencies.locks.0.datum')}"
                },
                "redeemer": {
                  "type": "spend",
                  "itemIdPattern": "{itemType}:0"
                }
              },
              {
                "scriptHashHex": "{get('cache.dependencies.smartContract.scriptHashHex')}",
                "datum": {
                  "dataHex": "{get('cache.dependencies.locks.1.datum')}"
                },
                "redeemer": {
                  "type": "spend",
                  "itemIdPattern": "{itemType}:1"
                }
              },
              {
                "scriptHashHex": "{get('cache.dependencies.smartContract.scriptHashHex')}",
                "datum": {
                  "dataHex": "{get('cache.dependencies.locks.2.datum')}"
                },
                "redeemer": {
                  "type": "spend",
                  "itemIdPattern": "{itemType}:2"
                }
              },
              {
                "scriptHashHex": "{get('cache.dependencies.smartContract.scriptHashHex')}",
                "datum": {
                  "dataHex": "{get('cache.dependencies.locks.3.datum')}"
                },
                "redeemer": {
                  "type": "spend",
                  "itemIdPattern": "{itemType}:3"
                }
              },
              {
                "scriptHashHex": "{get('cache.dependencies.smartContract.scriptHashHex')}",
                "datum": {
                  "dataHex": "{get('cache.dependencies.locks.4.datum')}"
                },
                "redeemer": {
                  "type": "spend",
                  "itemIdPattern": "{itemType}:4"
                }
              }
            ]
          }
        },
        "options": {
          "collateralCoinSelection": "LASLAD"
        }
      }
    },
    "signUnlock": {
      "type": "signTxs",
      "namePattern": "signed-unlock",
      "txs": [
        "{get('cache.buildUnlock.txHex')}"
      ],
      "detailedPermissions": false
    },
    "submitUnlock": {
      "type": "submitTxs",
      "namePattern": "submitted-unlock",
      "txs": "{get('cache.signUnlock')}"
    },
    "finally": {
      "type": "script",
      "exportAs": "LockAndRedeem",
      "run": {
        "locks": {
          "type": "macro",
          "run": "{get('cache.dependencies.locks')}"
        },
        "smartContract": {
          "type": "macro",
          "run": "{get('cache.dependencies.smartContract.scriptHex')}"
        },
        "smartContractHash": {
          "type": "macro",
          "run": "{get('cache.dependencies.smartContract.scriptHashHex')}"
        },
        "smartContractAddress": {
          "type": "macro",
          "run": "{get('cache.dependencies.smartContractAddress')}"
        },
        "lockTx": {
          "type": "macro",
          "run": "{get('cache.buildLock.txHash')}"
        },
        "unlockTx": {
          "type": "macro",
          "run": "{get('cache.buildUnlock.txHash')}"
        }
      }
    }
  }
}